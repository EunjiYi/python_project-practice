#delta: 원하는 순서대로 2차원배열을 순회하기 위해서 사용

# 상하좌우 순서로 접근 할 수 있는 델타를 만들어보자
dr = [-1, 1, 0, 0] #상하좌우
dc = [0, 0, -1, 1]
#     c0     c1      c2
# r0 [0,0]  [0,1]  [0,2]
# r1 [1,0]  [1,1]  [1,2]
# r2 [2,0]  [2,1]  [2,2]

arr = [[1,2,3], [4,5,6], [7,8,9]]
'''
[1][2][3]
[4][5][6]
[7][8][9]
'''
r = 1
c = 1
# print(arr[r][c])
# r += dr[0]
# c += dc[0]
# print(arr[r][c])

#상하좌우 연속으로 순회하기
for i in range(4):
    #다음좌표를 계산
    nr = r + dr[i]
    nc = c + dc[i]
    print(arr[nr][nc])  #2 8 4 6 상하좌우

#상하좌우의 합
sum_v = 0
for i in range(4):
    #다음좌표를 계산
    nr = r + dr[i]
    nc = c + dc[i]
    sum_v += arr[nr][nc]
print(sum_v) #20

#대각선 순회(시계방향으로)
#2 3 6 9 8 7 4 1
drr = [-1, -1, 0, 1, 1, 1, 0, -1]  #상 우상 우 우하 하 좌하 좌 좌상
dcc = [0, 1, 1, 1, 0, -1, -1, -1]
for i in range(8):
    nrr = r + drr[i]
    ncc = c + dcc[i]
    print(arr[nrr][ncc])  #2 3 6 9 8 7 4 1 #시계방향으로